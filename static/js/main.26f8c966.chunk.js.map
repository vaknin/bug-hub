{"version":3,"sources":["components/firebase.js","components/Item.js","components/EditItemDialog.js","components/ChangeTabDialog.js","components/Items.js","components/NewItemDialog.js","components/Nav.js","App.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Item","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","react_default","a","createElement","className","onClick","props","getItem","item","data-toggle","data-target","title","date","description","href","concat","tfs","rel","target","ticket","Component","EditItemDialog","_getPrototypeOf2","_len","length","args","Array","_key","call","createInputs","createInput","type","name","display","placeholder","required","htmlFor","defaultValue","onInput","e","updateTemp","id","temp","onChange","supplier","client","submitForm","editItem","createSetAsBtn","setItemAs","newTab","textContent","toLowerCase","openTabDialog","createButtons","tab","role","aria-haspopup","aria-expanded","aria-labelledby","modal","document","querySelector","form","$","on","reset","_this2","tabIndex","aria-hidden","onSubmit","autoComplete","data-dismiss","removeItem","changeTabDialog","setState","priority","reason","capitalTabName","tabName","toUpperCase","slice","confirm","preventDefault","changeItemTab","state","status","undefined","Items","data","_i","_Object$keys","keys","items","map","components_Item","activeItem","assign","_this3","listItems","components_EditItemDialog","ChangeTabDialog","NewItemDialog","defineProperty","clearState","newItem","typeDropdown","Nav","switch","changeTab","createTab","capitalized","components_NewItemDialog","search","firebase","database","ref","App","searching","results","searchItem","keyword","toString","_iteratorNormalCompletion","_didIteratorError","_iteratorError","itemsloop","_step","_iterator","Symbol","iterator","next","done","_Object$values","values","includes","push","err","return","getDate","today","Date","dd","String","padStart","mm","getMonth","yyyy","getFullYear","_i2","_keys","set","child","remove","update","closedate","snapshot","itemsObj","val","_i3","_keys2","components_Nav","components_Items","React","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.26f8c966.chunk.js","sourcesContent":["const config = {\n    apiKey: \"AIzaSyC8DcDLA9ksP2GsAUEfnu0gZm48R5mps9s\",\n    authDomain: \"bugsmanager-8f66d.firebaseapp.com\",\n    databaseURL: \"https://bugsmanager-8f66d.firebaseio.com\",\n    projectId: \"bugsmanager-8f66d\",\n    storageBucket: \"\",\n    messagingSenderId: \"345845082304\",\n    appId: \"1:345845082304:web:3280019aa7596de0\"\n  };\n\n  export default config;","import React, { Component } from 'react';\n\nexport class Item extends Component {\n\n    render() {\n        return (\n            <div className=\"card col-5 mb-4 mx-2\" onClick={() => this.props.getItem(this.props.item)} data-toggle=\"modal\" data-target=\"#editItemDialog\">\n                <div className=\"card-body text-center\">\n                    <div className=\"d-flex\">\n                        <h5 className=\"card-title mr-auto\">{this.props.item.title}</h5>\n                        <p className=\"text-right ml-auto\" >{this.props.item.date}</p>\n                    </div>\n                    <p className=\"card-text\">{this.props.item.description}</p>\n                    <a href={`https://gimmonix.visualstudio.com/Versions%20list%20-%20Waterfall/_workitems/edit/${this.props.item.tfs}`} className=\"card-link badge badge-primary p-2\" rel=\"noopener noreferrer\" target=\"_blank\">TFS Link</a>\n                    <a href={`https://carsolize.zendesk.com/agent/tickets/${this.props.item.ticket}`} className=\"card-link badge badge-primary p-2\" rel=\"noopener noreferrer\" target=\"_blank\">Ticket Link</a>\n                </div>\n            </div>\n         )\n    }\n}\n\nexport default Item;","import React, { Component } from 'react';\nimport $ from '../../node_modules/jquery/dist/jquery';\n\nexport class EditItemDialog extends Component {    \n\n    // Once the component has loaded, configure modal to reset form on dismiss (this is called only once in the entire lifycycle)\n    componentDidMount() {\n        \n        let modal = document.querySelector('#editItemDialog');\n        let form = document.querySelector('#editItemForm');\n        $(modal).on('hide.bs.modal', () => {\n            form.reset();\n        });\n    }\n\n    // Dynamically create inputs\n    createInputs = () => {\n\n        // Check if there is no item to return\n        if (!this.props.item){\n            return null;\n        }\n\n        const createInput = (type, name, display, placeholder, value, required) => {\n            return(\n                <div className=\"form-group\">\n                    <label htmlFor={name} className=\"col-form-label\">{display}</label>\n                    <input type={type} defaultValue={value} onInput={e => this.props.updateTemp(name, e.target.value)} className=\"form-control\" id={name}  placeholder={placeholder} required={required}/>\n                </div>\n            );\n        }\n\n        const typeDropdown = () => {\n\n            return(\n                <div>\n                    <label htmlFor=\"selectType\" className=\"col-form-label\">Type</label>\n                    <select value={this.props.temp.type} onChange={e => this.props.updateTemp('type', e.target.value)} className=\"form-control mb-2\" id=\"selectType\">\n                        <option>Supplier</option>\n                        <option>Affiliate</option>\n                        <option>Room Mapping</option>\n                    </select>\n                </div>);\n        }\n\n        return(\n            <div>\n                {typeDropdown()}\n                {createInput('text', 'title', 'Title', 'A descriptive title for the bug', this.props.item.title, /*true*/null)}\n                {createInput('text', 'description', 'Description', 'A short description of the bug', this.props.item.description, null)}\n                {createInput('text', 'supplier', 'Supplier', 'The supplier causing the bug or affected by it', this.props.item.supplier, /*true*/null)}\n                {createInput('text', 'client', 'Impcated Client', 'Who is suffering from this bug?', this.props.item.client, null)}\n                {createInput('number', 'tfs', 'TFS #', 'The TFS number, e.g. 23580', this.props.item.tfs, /*true*/null)}\n                {createInput('number', 'ticket', 'Ticket #', 'The Ticket\\'s number, if exists, e.g. 23580', this.props.item.ticket, null)}\n            </div>\n        );\n\n    }\n\n    // Submits the form and sends its data to App.js\n    submitForm = e => {\n        this.props.editItem(e);\n    }\n\n    // Creates the dropdown button that changes an Item's tab\n    createSetAsBtn = () => {\n\n        // Check if there is no item to return\n        if (!this.props.item){\n            return null;\n        }\n\n        // 'Set as' Button onClick\n        const setItemAs = e => {\n            let newTab = e.target.textContent.toLowerCase();\n            this.props.updateTemp('tab', newTab);\n            this.props.openTabDialog(newTab);\n        }\n\n        // Dynamically create the dropdown buttons\n        const createButtons = tab => {\n            let currentTab = this.props.item.tab;\n\n            // Don't display 'Set as Pending' if the item is already set to Pending\n            if (currentTab === tab.toLowerCase()){\n                return null;\n            }\n            \n            return <button onClick={setItemAs} type=\"button\" className=\"dropdown-item btn\">{tab}</button>\n        }\n\n        // Render\n        return(\n        <div className=\"btn-group\" role=\"group\">\n            <button id=\"btnGroupDrop1\" type=\"button\" className=\"btn btn-warning dropdown-toggle mr-1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Set as</button>\n            <div className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\n                {createButtons('Pending')}\n                {createButtons('Active')}\n                {createButtons('Completed')}\n                {createButtons('Rejected')}\n            </div>\n        </div>);\n    }\n\n    // Render\n    render() {            \n\n        return (\n            <div className=\"modal fade\" id=\"editItemDialog\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"editItemDialogLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content px-2\">\n                        <form id=\"editItemForm\" onSubmit={this.submitForm} autoComplete=\"off\">\n\n                            {/* Header */}\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"editItemDialogLabel\">Edit Item</h5>\n\n                                {/* Buttons */}\n                                <div>\n                                    {this.createSetAsBtn()}\n                                    <button type=\"submit\" className=\"btn btn-success mx-1\">Save</button>\n                                    <button type=\"button\" className=\"btn btn-secondary mx-1\" data-dismiss=\"modal\">Cancel</button>\n                                    <button type=\"button\" className=\"btn btn-danger mx-1\" onClick={() => this.props.removeItem(this.props.item.key)} data-dismiss=\"modal\">Delete</button>\n                                </div>\n                            </div>\n\n                            {/* Body */}\n                            <div className=\"modal-body\">\n                                {this.createInputs()}\n                            </div>                                \n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EditItemDialog;","import React, { Component } from 'react';\nimport $ from '../../node_modules/jquery/dist/jquery';\n\nexport class changeTabDialog extends Component {\n\n    //#region Initialization\n\n    // Once the component has loaded, configure modal to reset form on dismiss (this is called only once in the entire lifycycle)\n    componentDidMount() {\n        \n        let modal = document.querySelector('#changeTabDialog');\n        let form = document.querySelector('#changeTabForm');\n        $(modal).on('hide.bs.modal', () => {\n            form.reset();\n        });\n    }\n\n    //#endregion\n\n    // Dynamically create inputs, depending on the target tab\n    createInputs = () => {\n\n        // If no tab is given, don't create anything\n        if (!this.props.tab){\n            return null;\n        }\n\n        let tab = this.props.tab; // The target tab\n\n        // Moving the Item to 'Active' tab, ask user to set priority\n        if (tab === 'active') { \n            return(\n                <div>\n                    <label htmlFor=\"select_priority\" className=\"col-form-label\">Priority</label>\n                    <select defaultValue=\"Unknown\" onChange={e => this.setState({priority: e.target.value})} className=\"form-control\" id=\"select_priority\" required>\n                        <option>Unknown</option>\n                        <option>Low</option>\n                        <option>Medium</option>\n                        <option>High</option>\n                    </select>\n                </div>\n            );\n        }\n\n        // Moving the Item to 'Rejected' tab, ask user to rejection reason\n        else if (tab === 'rejected') {\n            return(\n                <div className=\"form-group\">\n                    <label htmlFor=\"input_reason\" className=\"col-form-label\">Reason</label>\n                    <input type=\"text\" onInput={e => this.setState({reason: e.target.value})} className=\"form-control\" id=\"input_reason\"  placeholder=\"Why the bug has been rejected?\" required/>\n                </div>\n            );\n        }\n    }\n\n    // Display the tab's name with an uppercase first letter\n    capitalTabName = () => {\n\n        // If no tab is given, don't display anything\n        if (!this.props.tab){\n            return null;\n        }\n        let tabName = this.props.tab;\n        return tabName[0].toUpperCase() + tabName.slice(1);\n    }\n\n    // Move the data along, Form --> Items.js --> App.js --> Database\n    confirm = e => {\n\n        const clearState = () => {\n            this.setState({\n                status: undefined,\n                priority: undefined,\n                reason: undefined,\n            });\n        }\n\n        e.preventDefault();\n        e.target.reset(); // Reset the form\n        this.props.changeItemTab(this.state); // Send the Item to App.js\n        clearState(); // Clear the state\n    }\n\n    render() {\n\n        return (\n            <div className=\"modal fade\" id=\"changeTabDialog\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"changeTabDialogLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content px-2\">\n                        <form id=\"changeTabForm\" onSubmit={this.confirm} autoComplete=\"off\">\n\n                            {/* Header */}\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"changeTabDialogLabel\">Set as {this.capitalTabName()}</h5>\n\n                                {/* Buttons */}\n                                <div>\n                                    <button type=\"submit\" className=\"btn btn-success mx-1\">Confirm</button>\n                                    <button type=\"button\" className=\"btn btn-secondary mx-1\" data-dismiss=\"modal\">Cancel</button>\n                                </div>\n                            </div>\n\n                            {/* Body */}\n                            <div className=\"modal-body\">\n                                {this.createInputs()}\n                            </div>                                \n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default changeTabDialog;","import React, { Component } from 'react';\nimport Item from './Item';\nimport EditItemDialog from './EditItemDialog';\nimport ChangeTabDialog from './ChangeTabDialog';\nimport $ from '../../node_modules/jquery/dist/jquery';\n\nexport class Items extends Component {\n\n    state = {};\n\n    listItems(){\n\n        return this.props.items.map(item => \n            {\n                return(\n                item.tab === this.props.tab // Is the item in the curretly viewed tab?\n                ? \n                <Item getItem={item => this.setState({activeItem: Object.assign({}, item), temp: Object.assign({}, item)})} key={item.key} item={item}/> // Yes -> Display the item\n                : \n                null) // No -> Don't display the item\n            });\n    }\n\n    updateTemp = (key, value) => {\n        let temp = this.state.temp;\n        temp[key] = value;\n        this.setState(temp);\n    }\n\n    // Close the edit modal and open the changeTab dialog\n    openTabDialog = tab => {\n\n        $('#editItemDialog').modal('hide'); // Close dialog\n\n        // If the target tab is pending/completed, skip tab dialog\n        if (tab === 'pending' || tab === 'completed') {\n            return this.changeItemTab();\n        }\n\n        this.setState({newTab: tab}); // Save the new item's tab\n        $('#changeTabDialog').modal('show'); // Open ChangeTabDialog\n    }\n\n    // Save the changed item to database\n    changeItemTab = data => {\n\n        let item = this.state.temp; // The configured item\n\n        // Data can be empty, e.g. moving to pending doesn't require to send any data\n        if(data !== null && data !== undefined){\n            for (let key of Object.keys(data)){\n                if (data[key] !== undefined){\n                    item[key] = data[key];\n                }\n            }\n        }\n\n        this.props.changeItemTab(item); // Send to App.js and then to Database\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"row d-flex justify-content-center\">\n                {/* List all Items */}\n                {this.listItems()}\n\n                {/* This dialog opens when editing/deleting an Item */}\n                <EditItemDialog \n                updateTemp={this.updateTemp} \n                temp={this.state.temp} \n                item={this.state.activeItem} \n                editItem={e => this.props.editItem(e, this.state.temp)} \n                removeItem={this.props.removeItem} \n                openTabDialog={this.openTabDialog}/>\n\n                {/* Change an Item's Tab, let the user fill the required fields */}\n                <ChangeTabDialog \n                tab={this.state.newTab}\n                changeItemTab={this.changeItemTab}/>\n            </div>\n        )\n    }\n}\n\nexport default Items;","import React, {\n    Component\n} from 'react';\n\nexport class NewItemDialog extends Component {\n    \n    // Store form data here\n    state = {};\n    \n    createInput = (type, name, display, placeholder, required) => {\n        \n        return (\n            <div className=\"form-group\">\n              <label htmlFor={name} className=\"col-form-label\">{display}</label>\n              <input type={type} className=\"form-control\" id={name} onInput={e => this.setState({ [name]: e.target.value })} placeholder={placeholder} required={required}/>\n          </div>\n        );\n    }\n    \n    typeDropdown() {\n        return (\n            <div>\n                <label htmlFor=\"selectType\" className=\"col-form-label\">Type</label>\n                <select className=\"form-control mb-3\" onInput={e => this.setState({ type: e.target.value })} id=\"selectType\" required>\n                    <option>Supplier</option>\n                    <option>Affiliate</option>\n                    <option>Room Mapping</option>\n                </select>\n            </div>);\n    }\n    \n    clearState = () => {\n        this.setState({\n            title: undefined,\n            type: undefined,\n            description: undefined,\n            supplier: undefined,\n            client: undefined,\n            tfs: undefined,\n            ticket: undefined,\n        });\n    }\n\n    submitForm = e => {\n        this.props.newItem(e, this.state); // Create the item\n        this.clearState(); // Clear the state after form submit\n    }\n    \n    render() {\n        \n        return (\n            <div className=\"modal fade\" id=\"newItemDialog\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"newItemDialogLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content px-2\">\n\n\n                    <form id=\"newItemForm\" onSubmit={this.submitForm} autoComplete=\"off\">\n\n                        {/* Header */}\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"editItemDialogLabel\">New Item</h5>\n\n                            {/* Buttons */}\n                            <div>\n                                <button type=\"submit\" className=\"btn btn-primary mx-1\">Add Item</button>\n                                <button type=\"button\" className=\"btn btn-secondary mx-1\" data-dismiss=\"modal\">Cancel</button>\n                            </div>\n                        </div>\n\n\n                        {/* Body */}\n                        <div className=\"modal-body\">\n                            {this.typeDropdown()}\n                            {this.createInput('text', 'title', 'Title', 'A descriptive title for the bug', /*true*/null)}\n                            {this.createInput('text', 'description', 'Description', 'A short description of the bug', null)}\n                            {this.createInput('text', 'supplier', 'Supplier', 'The supplier causing the bug or affected by it', /*true*/null)}\n                            {this.createInput('text', 'client', 'Impcated Client', 'Who is suffering from this bug?', null)}\n                            {this.createInput('number', 'tfs', 'TFS #', 'The TFS number, e.g. 23580', /*true*/null)}\n                            {this.createInput('number', 'ticket', 'Ticket #', 'The Ticket\\'s number, if exists, e.g. 23580', null)}                                                                        \n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default NewItemDialog;\n","import React, { Component } from 'react'\nimport NewItemDialog from './NewItemDialog';\n\nexport class Nav extends Component {\n\n   state = {\n      tab: 'pending'\n   };\n\n   //Move between tabs, e.g. Pending to Rejected\n   switch = tab => {\n\n      if (tab !== this.state.tab){\n\n         //Update state with the new tab\n         this.setState({tab});\n\n         //Change tab in the App\n         this.props.changeTab(tab);\n      }\n   }\n\n   render() {\n\n      //Create tabs dynamically\n      const createTab = name => {\n\n         let capitalized = name[0].toUpperCase() + name.slice(1);\n\n         return(\n         <li className=\"nav-item\">\n                  <button onClick= {() => this.switch(name) } className={\"nav-link \" + (this.state.tab === name ? 'active' : undefined)}>{capitalized}</button>\n         </li>);\n      }\n\n      return (\n         <div className=\"navbar flex-nowrap mb-5 mt-2 d-flex justify-content-center\">\n\n            {/* New Item Button - Opens the dialog*/}\n            <button type=\"button\" data-toggle=\"modal\" data-target=\"#newItemDialog\" className=\"btn btn-primary mr-5 px-3\">New Item</button>\n            <NewItemDialog \n               newItem= {(e, data) => {\n                  this.props.newItem(e, data); // Create the item\n                  this.switch('pending'); // Switch tab to 'Pending'\n            }}/>\n\n            {/* Navigation */}\n            <ul className=\"nav nav-tabs flex-nowrap d-flex\">\n               {createTab('pending')}\n               {createTab('active')}\n               {createTab('completed')}\n               {createTab('rejected')}\n            </ul>\n\n            {/* Search */}\n            <div className=\"form-inline\">\n               <input className=\"form-control ml-5\" onInput={this.props.search} type=\"search\" placeholder=\"Search\"/>\n            </div>\n         </div>\n      )\n   }\n}\n\nexport default Nav;","//#region Import\n\n//React\nimport React from 'react';\n\n//Bootstrap\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport $ from '../node_modules/jquery/dist/jquery';\nimport '../node_modules/popper.js/dist/popper';\nimport '../node_modules/bootstrap/dist/js/bootstrap';\n\n//Firebase\nimport * as firebase from '../node_modules/firebase/app';\nimport \"firebase/database\"\nimport config from './components/firebase';\n\n//Stylesheet\nimport './App.css';\n\n//Components\nimport Items from './components/Items';\nimport Nav from './components/Nav';\n\n//#endregion\n\n//Initialize database\nfirebase.initializeApp(config);\nlet database = firebase.database().ref('items');\n\n//#endregion\n\nclass App extends React.Component {\n\n    //#region Initialization\n    \n    // Get initial items from Firebase and listen for db changes\n    constructor(props) {\n        super(props);\n        \n        // Make an array of items\n        database.on('value', snapshot => {\n            \n            let itemsObj = snapshot.val();\n            \n            if (itemsObj === null) {\n                this.setState({\n                    items: []\n                });\n                return;\n            }\n            \n            let items = [];\n            let keys = Object.keys(itemsObj);\n            \n            //Make the array, add the key as a property to every item\n            for (let key of keys) {\n                let item = itemsObj[key];\n                item.key = key;\n                items.push(item);\n            }\n            \n            this.setState({\n                items\n            });\n        });\n    }\n    \n    // Initial state\n    state = {\n        tab: 'pending',\n        searching: false,\n        results: [],\n        items: []\n    };\n\n    //#endregion\n    \n    //#region Item Actions\n\n    // Search for an item according to a keyword\n    searchItem = e => {\n        \n        let keyword = e.target.value.toString().toLowerCase(); // Set to lowercase to disable case-sensitivity\n        \n        // No input entered, clear results and return\n        if (keyword === \"\") {\n            this.setState({\n                searching: false,\n                results: []\n            });\n            return;\n        }\n        \n        // Save all search results to an array\n        const results = [];\n\n        itemsloop: // Loop through all items\n        for (let item of this.state.items) {\n\n            // Loop through all fields of the item\n            for (let field of Object.values(item)) {\n\n                // If the field has the keyword inside of it, return the item in the results\n                if (field.toLowerCase().includes(keyword)){\n                    results.push(item);\n                    continue itemsloop;\n                }\n            }\n        }\n        \n        // Update the original items array\n        this.setState({\n            searching: true,\n            results\n        });\n    }\n\n    //Get today's current date\n    getDate = () => {\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0');\n        var yyyy = today.getFullYear();\n        return `${dd}/${mm}/${yyyy}`\n    }\n    \n    // Creates a new item in the database\n    newItem = (e, state) => {\n        \n        e.preventDefault(); // Prevent form from refreshing the page\n        e.target.reset(); // Reset form\n        $('#newItemDialog').modal('hide'); // Hide modal\n        \n        // Initialize an item object, to contain all fields acquired from inputs\n        let item = {\n            tab: 'pending',\n            date: this.getDate(),\n            type: 'Supplier'\n        };\n        \n        //Return non-empty fields only\n        let keys = Object.keys(state);\n        for(let key of keys){\n            let value = state[key];\n            if (value !== undefined){\n                item[key] = value;\n            }\n        }\n        \n        //Add the new item to the database\n        database.push().set(item);\n    }\n    \n    //Delete the selected item from the database\n    removeItem = key => {\n        database.child(key).remove();\n    }\n\n    //Update an item\n    editItem = (e, item) => {\n\n        e.preventDefault(); // Prevent form from refreshing the page\n        e.target.reset(); // Reset form\n        $('#editItemDialog').modal('hide'); // Hide modal\n\n        // Apply changes to database\n        database.child(item.key).update(item);\n    }\n\n    // Move an item between tabs\n    changeItemTab = item => {\n        $('#changeTabDialog').modal('hide'); // Hide modal\n\n        // Add 'Closed date' field if set as completed/rejected\n        let tab = item.tab;\n        if (tab === 'completed' || tab === 'rejected'){\n            item.closedate = this.getDate();\n        }\n\n        database.child(item.key).update(item);\n    }\n\n    //#endregion\n    \n    render() {\n        return (\n            <div className=\"container\">\n  \n                {/* Nav Bar */}\n                <Nav \n                newItem={this.newItem} \n                search={this.searchItem} \n                changeTab={tab => this.setState({tab})}>\n                </Nav>\n        \n                {/* Items */}\n                <Items \n                editItem={this.editItem} \n                removeItem={this.removeItem} \n                tab={this.state.tab} \n                items={this.state.searching ? this.state.results : this.state.items}\n                changeItemTab={this.changeItemTab}>\n                </Items>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}